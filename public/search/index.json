[{"content":"前言 静态博客已成为现代技术博客、个人站点和文档系统的热门选择。\n本文基于Hugo\nHugo优势 生产的性能好。Hugo是由 Go 语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。\n无论是Hugo还是Hexo，本质上都是将master文件通过预定好的模板渲染html文件\n环境准备 下载golang\n下载node.js\n安装golang 安装hugo之前，先安装好golang，推荐安装最新版本。\n安装时选择安装目录为 C:\\Users\\sky\\work\\soft\\golang 或者 D:\\sky\\work\\soft\\golang。\n修改环境变量，将 GOPATH 的值修改为 C:\\Users\\sky\\work\\soft\\gopath 或者 D:\\sky\\work\\soft\\gopath（默认为 %USERPROFILE%\\go）。\n安装nodejs/npm 为了使用Google Docsy主题，需要安装nodejs/npm。\n在网站下载nodejs\n安装时选择安装路径为 C:\\Users\\sky\\work\\soft\\nodejs 或者 D:\\sky\\work\\soft\\nodejs。\n安装Hugo 在Hugo Releases页面下载对应操作系统版本的安装包。Hugo官方下载文档 ,如hugo_extended_0.150.0_windows-amd64.zip.下载下来之后，解压缩，将 hugo.exe 文件复制到目录下。\n然后修改环境变量，在 Path 中增加这个路径， 验证安装 $ which hugo 、$ hugo version。\n切记由于 hugo和主题之间版本有依赖关系，因此不同主题选择不同版本\n打开命令提示符，输入hugo version来验证安装是否成功。\nHugo安装完成后的配置工作 设置别名\n为了方便使用，增加 hugo server 命令的 alias 用来本地编辑时的实时预览： vi ~/.zshrc 增加内容：\n1 2 3 4 5 # hugo alias h=\u0026#39;hugo -D -F server --disableFastRender --bind \u0026#34;0.0.0.0\u0026#34;\u0026#39; alias h2=\u0026#39;hugo -D -F server --disableFastRender --bind \u0026#34;0.0.0.0\u0026#34; --port 2323\u0026#39; alias h3=\u0026#39;hugo -D -F server --disableFastRender --bind \u0026#34;0.0.0.0\u0026#34; --port 3333\u0026#39; alias h4=\u0026#39;hugo -D -F server --disableFastRender --bind \u0026#34;0.0.0.0\u0026#34; --port 4343\u0026#39; hugo命令行参数说明：\n-D: 等同\u0026ndash;buildDrafts，标记为 Draft 的内容也会一起构建，方便在本地编写和预览新的暂时未发布的内容。\n-F: 等同\u0026ndash;buildFuture，发布时间为\u0026quot;未来\u0026quot;(即时间比当前时间还要晚)内容也会一起构建，方便在本地编写和预览新的暂时未发布的内容。 \u0026ndash;disableFastRender：当内容修改时，进行完整的重新构建，避免预览的内容不够新 h2/h3/h4 指定了不同的端口，当需要在本地打开多个时，可以使用固定端口而不是随机端口。\n设置代理 npm代理 主要是 npm 命令需要代理才能顺利下载文件，比如:安装 PostCSS 要构建或更新站点的 CSS 资源，您还需要PostCSS创建最终资产。\n如果您需要安装它，您必须在您的机器上安装最新版本的NodeJS，以便您可以使用npmNode 包管理器。\n默认情况npm下，在您运行的目录下安装工具\n1 2 3 4 npm install： npm install -D autoprefixer npm install -D postcss-cli npm install -D --save autoprefixer 如果发生报错，并且查看到如下的错误信息\n1 2 3 4 5 6 7 8 path /home/sky/work/code/learning/docsy/\u0026gt;node_modules/hugo-extended command failed command sh -c node postinstall.js ✖ Hugo installation failed. : node:internal/process/promises:391 triggerUncaughtException(err, true /\u0026gt;*fromPromise*/); ^ RequestError: getaddrinfo ENOTFOUND github.com 解决方式：\n1 2 3 npm config set registry \u0026lt;https://registry.npmmirror.com\u0026gt; npm config set proxy \u0026lt;http://192.168.2.1:7890\u0026gt; npm config set https-proxy \u0026lt;http://192.168.2.1:7890\u0026gt; 如果遇到报错信息：\n1 2 Failed to connect to github.com port 443 after 21045 ms Could not connect to server 注意修改成自己的IP和端口号\n1 2 git config --global http.proxy \u0026lt;http://127.0.0.1:7890\u0026gt; git config --global https.proxy \u0026lt;http://127.0.0.1:7890\u0026gt; 站点骨架 每个 Hugo 项目都是一个目录，其中的子目录贡献于站点的内容、结构、行为和呈现。\n在创建新站点时，Hugo 会生成一个项目骨架。例如，以下命令：\n利用hugo new site myblog(此时需要用到hugo.exe,假设存放在bin下),会在bin下生成myblog\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 myblog/ ├── archetypes #新建内容的模板（原型），方便统一管理文章格式，用于新建内容时自动填充默认 Front Matter │ └── `default.md` |--assests #目录包含通常通过资源管道传递的全局资源。包括图片、CSS、Sass、JavaScript 和 TypeScript 等资源。 ├── hugo.toml # 博客站点的配置文件 ├── content # 博客文章所在目录.目录包含组成站点内容的标记文件（通常是 markdown）和页面资源 ├── data #目录包含用于增强内容、配置、本地化和导航的数据文件（JSON、TOML、YAML 或 XML），供模板调用 |----i18n #目录包含多语言站点的翻译表。 ├── layouts # 自定义网站布局。目录包含将内容、数据和资源转换为完整网站的模板。决定网站的外观和布局。主题通常也会提供一套layouts，当你用自定义（不使用主题）时候可以在此覆盖主题默认模板。（hugo 初始化的layouts并不包含任何主题） ├── static # 一些静态内容，目录包含在构建站点时将复制到 public 目录的文件，例如 .ico、.txt 和用于验证站点拥有权的文件。在引入 页面包 和 资源管道之前，static 目录也用于存放图片、CSS 和 JavaScript 等资源 └── themes # 博客主题， 目录包含一个或多个主题，每个主题位于自己的子目录中。包含自己的layouts、static、配置文件等。启用主题后，Hugo首先会从主题中加载布局文件，再加载站点内自定义的覆盖文件 根据需要，可以将站点配置组织到子目录中： |---config/ #目录包含站点配置，可能分为多个子目录和文件。对于配置较少或不需要在不同环境中以不同方式运行的项目，项目根目录中的单个 hugo.toml 配置文件就足够了。 |___ _default/ |_____config.toml #全局配置文件 config.toml\nHugo的全局配置文件，用于定义站点的基本信息、URL、语言、主题、菜单等。也可以使用config.yaml/config.json\ncontent/\n​\t存放所有博客文章和页面。每个markdown文件的Front matter中定义标题、日期、草稿状态、标签与分类等信息。\n​\t示例文件：\ntitle:\u0026quot;我的第一篇文章\u0026quot; date:2024-03-21 draft:false tags:[\u0026quot;入门\u0026quot;、“Hugo”] categories:[“技术博客”] 这里是文章内容 archtypes/ ​\t定义新建内容时所用的模板（原型），方便统一管理文章格式。你可以自定义默认模板以满足特定格式要求\nlayouts/\n存放网站页面模板文件，决定网站的外观和布局。主题通常也会提供一套layouts，当你需要自定义时可以自此覆盖主题默认模板\nstatic/\n内容所有不会经过Hugo处理的静态文件，如图片、CSS文件、JS文件等。生成网站时，这些文件会直接复制到输出目录。\nthemes/\n存放第三方主题，每个主题通常都包含自己的layouts、static、配置文件等。启用主题后，Hugo会先从主题中加载布局文件，再加载站点内自定义的覆盖文件。\n利用Hugo命令构建站点时，Hugo 会创建一个 public 目录，目录包含发布的网站，在运行 hugo 命令时生成。Hugo 根据需要重建此目录及其内容。 通常还会创建一个 resources 目录：目录包含 Hugo 资源管道的缓存输出，在运行 hugo 或 hugo server 命令时生成。默认情况下，此缓存目录包括 CSS 和图片。Hugo 根据需要重建此目录及其内容。 Hugo 创建了一个联合文件系统，允许将两个或多个目录挂载到同一位置。例如，假设您的主目录包含一个 Hugo 项目的目录，另一个目录包含共享内容。您可以使用挂载（mounts）在构建站点时包含共享内容。 在站点配置中当两个或多个文件具有相同路径时，优先级顺序遵循挂载的顺序。例如，如果共享内容目录包含 books/book-1.md，则会被忽略，因为项目的 content 目录先被挂载。 将archetypes/default.md,\u0026quot;+\u0026ldquo;改成\u0026rdquo;-\u0026quot;,\u0026quot;=\u0026ldquo;改成\u0026rdquo;+\u0026quot;，因为这个时toml格式的，我们要改成yaml格式 配置主题 下载主题 ​\t以Stack为例，下载发布页面.把解压好的主题放在themes下，并把后面的版本号如3.3.10去掉\n​\t或者将存储库克隆到 themes/hugo-theme-stack\n​\tgit clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack\n​\t或者如果您已经在您的网站中使用 Git，则可以通过在 Hugo 网站的根目录中运行以下命令将主题添加为子模块：\n​\tgit submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack\n把子模块的hugo-theme-stack里的layouts复制出来，复制到myblog下的layouts\n在hugo-theme-stack里examplesite里面的content和hugo.yaml,复制到myblog 下，然后把原来的hugo.toml删掉\n1 2 3 4 5 6 7 示例 baseurl: https://example.com/ languageCode: en-us theme: hugo-theme-stack#指定主题 title: Example Site copyright: Example Person DefaultContentLanguage: zh-cn# 默认语言 然后在终端执行hugo，进行构建（如果有一些我们没有，删除content下post的内容，只留下chinese-test）\n同一个文件可以通过多个markdown，后缀名不同来实现。默认的index就是默认的名字 zh-cn# 默认语言，默认的主题下的名字。如果。即content/post/chinese-test下的 index-zh-cn.md可以通过index-zh-cn来改变在中文界面i显示。index-en会在英文界面下显示。\n​\t这个里面有cataglories分类和用来打tags archetypes/default.md\n​\t文章模板 draft改成false，否则不会显示\n如何快速创建一个文章？hugo new potst/test/index.md,就生成了test/index.md,将draft:true改成draft:false（此时是在content/post下）\n1 2 3 4 5 6 7 8 9 10 11 title: Chinese Test description: 这是一个副标题 date: 2020-09-09 slug: test-chinese image: helena-hertz-wWZzXlDpMog-unsplash.jpg categories: - Test - 测试 - HLE tags: - lf 常用命令 命令 说明 hugo new post/test/index.md 创建新文章。新建文章后，Hugo会在content/post目录下生成一份Markdown文件，并根据archetypes中的模板填充默认Front Matter hugo server -D 启动本地服务器预览，使用-D参数可包含草稿内容进行预览 hugo 构建站点（生成静态文件到public/目录） hugo \u0026ndash;cleanDestinationDir 清理构建文件并重新生成 hugo \u0026ndash;minify 构建并压缩HTML/CSS/JS文件（适合生产部署） hugo new site [path] 创建一个新站点 hugo server 启动本地服务器预览 hugo config 显示站点配置信息 hugo list drafts 列出所有处于草稿状态的文章 常用参数\n-D ,\u0026ndash;buildDrafts:包括草稿文章 -F，\u0026ndash;buildFuture:包括未来发布的文章 -E，\u0026ndash;buildExpired：包括已过期的文章 \u0026ndash;minify:生成时压缩输出文件 \u0026ndash;gc:构建时运行垃圾回收 404 Page Not Found 注意，一旦网站可以建立，那么除非你做一个新的文件，否则就一直404\nhugo server \u0026ndash;theme=your_theme_name(echo \u0026ldquo;theme = \u0026lsquo;ananke\u0026rsquo;\u0026rdquo; \u0026raquo; hugo.toml)，这个相当于向hugo.toml添加theme 删去 hugo.toml,保留config.toml 推荐：在 config.toml 中写 theme = \u0026quot;your_theme_name\u0026quot;\n临时：命令行 hugo server --theme=your_theme_name\n如果需要更多,如配置favicon，评论区，参考建站技术 | 使用 Hugo + Stack 简单搭建一个博客\nGithub推送自动化 在使用 GitHub Pages 构建并托管博客时，我们面临一个常见问题：如何在保持源码安全的同时，将构建好\n的 public 文件用于页面展示。直接丢上去的往往是public文件。为了解决这一问题，我们可以通过创建两个 GitHub 仓库来实现不同用途的分离和自动化管理。\n源码仓库（source_blog） 用于存储博客相关的源码， 包括markdown文件、配置信息等未构建的内容 设置为Private仓库 展示仓库（blog_show) 用于存储构建后的文件（如public文件夹），供Github Pages或其他托管服务使用 设为Public仓库，确保可以正常访问页面 自动化流程 利用Github Actions或脚本实现如下自动化：\n在源码仓库更新时触发构建操作，生成博客所需的静态文件\n将生成的文件自动推送到展示仓库，无需手动干预\nSettings-\u0026gt;Developer Settings-\u0026gt;Personal access tokens -\u0026gt; Tokens(classic),勾选repo和workflow，过期时间选择永远不过期\ngenerate token，然后复制生成的token\n点开source_blog,Security-Secrets and variables-Actions-Repository secrets,创建一个新的。\n修改自动化代码(deploy.yml)，将修改分支改成master。将.github_hugo移到blog下，并且去掉_hugo,作为部署文件\ngit init 创建.git 文件\nEXTERNAL_REPOSITORY:xx/blog_show，展示的博客\n​\tblow_show里所展示的就是public里面的内容\nblow_show\u0026gt;Settings\u0026gt;Pages\u0026gt;Build and delployment，改成 master 和root 你可以在根目录创建一个批处理脚本，用来快速启动本地服务器并使用 chrome 打开网页。\n1 2 3 4 5 6 本地运行.bat @echo off echo [本地运行] start chrome http://localhost:1313/ #默认开放1313端口 hugo server pause 使用Netlify Add newproject → import an existing project→选择blog_show\n参考 hexo与hugo博客搭建与github自动化推送和服务器推送 Stack官方文档 这是第一页内容。\n这是第二页内容。\n这是第三页内容。\n","date":"2025-09-23T00:00:00Z","permalink":"https://example.com/p/hugo--stack-%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/","title":"Hugo + Stack 简单搭建一个静态博客"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://example.com/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://example.com/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://example.com/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://example.com/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://example.com/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"https://example.com/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$\r\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://example.com/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://example.com/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://example.com/p/emoji-support/","title":"Emoji Support"}]